# crud.py
# Generated by Copilot
# Qui andrai a scrivere le funzioni che interagiscono con il database (Create, Read, Update, Delete)
# In questo progetto, ti serviranno principalmente funzioni di "Read" (lettura/interrogazione)

from .db import get_db_connection  # Importa la funzione per ottenere la connessione al database

# Funzione per autenticare un utente tramite codice e partita IVA
# (da usare nella pagina di login)
def autentica_utente(ancodice: str, anpariva: str) -> bool:
    """
    Verifica se esiste un utente con il codice e la partita IVA forniti.
    Interroga la tabella 1SEL00CONTI:
      - ANCODICE: codice utente
      - ANPARIVA: partita IVA
    Restituisce True se l'utente esiste, False altrimenti.
    """
    conn = get_db_connection()
    cursor = conn.cursor()
    # Query SQL per cercare l'utente - Fixed: nome tabella corretto
    query = """
        SELECT 1
        FROM [1SEL00CONTI]
        WHERE ANCODICE = ? AND ANPARIVA = ?
    """
    cursor.execute(query, (ancodice, anpariva))
    result = cursor.fetchone()
    conn.close()
    return result is not None  # True se trovato, False altrimenti

# Esempio di funzione per recuperare tutti gli ordini di un cliente
def get_ordini_cliente(ancodice: str):
    """
    Recupera tutti gli ordini (MVSERIAL) associati a un cliente (ANCODICE/MVCODCON).
    Restituisce una lista di codici ordine.
    """
    conn = get_db_connection()
    cursor = conn.cursor()
    query = """
        SELECT MVSERIAL
        FROM [1SEL00DOC_MAST]
        WHERE MVCODCON = ?
    """
    cursor.execute(query, (ancodice,))
    results = cursor.fetchall()
    conn.close()
    ordini = [row[0] for row in results]
    return ordini

# Esempio di funzione per recuperare i dettagli di un ordine specifico
def get_dettagli_ordine(mvserial: str):
    """
    Recupera i dettagli di un ordine (quantità, nome prodotto, ecc.) dato il suo codice MVSERIAL.
    Restituisce una lista di dettagli ordine (ogni dettaglio è un dizionario con nome prodotto e quantità).
    """
    conn = get_db_connection()
    cursor = conn.cursor()
    query = """
        SELECT MVDESART, MVQTAUM1
        FROM [1SEL00DOC_DETT]
        WHERE MVSERIAL = ?
    """
    cursor.execute(query, (mvserial,))
    results = cursor.fetchall()
    conn.close()
    dettagli = [{"mvdesart": row[0], "mvqtaum1": row[1]} for row in results]
    return dettagli

# Aggiungi altre funzioni CRUD se necessario...
